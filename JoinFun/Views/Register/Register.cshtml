@model JoinFun.Models.Member

@{
    var co = (IEnumerable<JoinFun.Models.County>)ViewBag.County;
    var dis = (IEnumerable<JoinFun.Models.District>)ViewBag.District;
    ViewBag.Title = "Register";
}

<h2 class="mt-5">註冊</h2>

<div class="container border">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal ">


            <hr />
            <div class="row ">
                <div class="col-md-6">
                    <div class="form-group col-md-12">
                        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@


                        @Html.LabelFor(model => model.Acc_Pass.FirstOrDefault().Account, htmlAttributes: new { @class = "control-label col-md-12 " })

                        @Html.EditorFor(model => model.Acc_Pass.FirstOrDefault().Account, new { htmlAttributes = new { @class = "form-control ", id = "account", name = "account" } })


                        @Html.ValidationMessageFor(model => model.Acc_Pass.FirstOrDefault().Account, "", new { @class = "text-danger" })
                        <div id="prompt"></div>
                       
                    </div>

                    <div class="form-group col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.Acc_Pass.FirstOrDefault().Password, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Acc_Pass.FirstOrDefault().Password, new { htmlAttributes = new { @class = "form-control", type = "password", id = "Password" } })


                        @Html.ValidationMessageFor(model => model.Acc_Pass.FirstOrDefault().Password, "", new { @class = "text-danger" })
                        <div></div>
                    </div>
                    <div class="form-group col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.Acc_Pass.FirstOrDefault().PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Acc_Pass.FirstOrDefault().PasswordConfirm, new { htmlAttributes = new { @class = "form-control", type = "password", id = "PasswordConfirm" } })


                        @Html.ValidationMessageFor(model => model.Acc_Pass.FirstOrDefault().PasswordConfirm, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.memNick, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.memNick, new { htmlAttributes = new { @class = "form-control", id = "memNick" } })
                        @Html.ValidationMessageFor(model => model.memNick, "", new { @class = "text-danger" })
                        <div> </div>
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        @*<input id="Email" type="email" class="form-control" />*@

                        <div></div>

                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.memCounty, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@Html.DropDownList("memCounty", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.memCounty, "", new { @class = "text-danger" })
                        <select id="memCounty" name="memCounty" class="form-control">
                            @foreach (var i in co)
                            {
                                <option value="@i.CountyNo">@i.CountyName</option>
                            }
                        </select>

                    </div>


                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.memDistrict, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@Html.DropDownList("memDistrict", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.memDistrict, "", new { @class = "text-danger" })
                        <select id="memDistrict" name="memDistrict" class="form-control ">
                            @foreach (var i in dis)
                            {
                                <option value="@i.DistrictSerial">@i.DistrictName</option>
                            }
                        </select>

                    </div>



                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })

                    </div>



                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })

                        @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        <select id="Sex" name="Sex" class="form-control">
                            <option selected>男</option>
                            <option>女</option>
                        </select>

                    </div>
                </div>


                <div class="col-md-6">
                    <div class="form-group col-md-12">
                        <div class="row mt-5 ">
                            @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
                            <textarea id="Introduction" name="Introduction" style="resize:none" class="form-control " rows="8"> </textarea>
                            @*@Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-12">
                            <div class="row mt-3">
                                @Html.LabelFor(model => model.Habit, "興趣愛好", htmlAttributes: new { @class = "control-label col-md-2" })

                                <textarea id="Habit" name="Habit" style="resize:none" class="form-control " rows="8"> </textarea>
                                @*@Html.EditorFor(model => model.Habit, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Habit, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            <div class="row">
                                @Html.LabelFor(model => model.Dietary_Preference, htmlAttributes: new { @class = "control-label col-md-2" })
                                <textarea id="Dietary_Preference" name="Dietary_Preference" style="resize:none" class="form-control " rows="8"> </textarea>
                                @*@Html.EditorFor(model => model.Dietary_Preference, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Dietary_Preference, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row align-items-end">
                            <div class="form-group">
                                <div class="col-12 align-self-end ">
                                    <input id="submit" name="submit" type="submit" value="送出資料" class="btn btn-success " />
                                </div>
                            </div>
                        </div>
                        @*<div class="modal fade" id="myModal">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title">注意事項:</h4>
                                        <button type="button" class="close" data-dismiss="modal">
                                            <span>&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <p>稍後請務必至註冊所填Email完成驗證帳號,方可使用此帳號!</p>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" data-dismiss="modal" class="btn btn-danger">關閉</button>
                                    </div>
                                </div>
                            </div>
                        </div>*@
                    </div>
                </div>

            </div>

        </div>



    }

    @*<div class="form-group">
            <div class="btn btn-danger">
                @Html.ActionLink("使用 Google 註冊", "Index")
            </div>
            <div class="btn btn-primary">
                @Html.ActionLink("使用 Facebook 註冊", "Index")
            </div>
        </div>*@

</div>


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@*<script src="~/JS/jquery.validate.plus.js"></script>*@
@section scripts{
    <script>

        $('#memCounty').change(function () {
            $('#memDistrict').empty();
            $.ajax({
                type: "Get",
                url: "http://localhost:54129/api/getDistrict?countyNo=" + $('#memCounty').val(),
                success: function (d) {
                    console.log(d);
                    d.forEach(function (currentValue, index, array) {
                        if (index % 2 != 0) {
                            $('#memDistrict').append("<option value='" + array[index - 1] + "'>" + currentValue + "</option>");
                        }
                    });
                }
            });
        });


        //$('#Email').blur(function () {
        //    $('#myModal').modal('toggle');
        //});

        //驗證:Password


        $('#Password').keyup(function () {
            if ($('#Password').val().length < 8) {
                $('#Password').addClass("is-invalid");
                $('#Password~div').addClass("invalid-feedback").text('至少8個字元!!');
                flag = false;
            }
            else {
                clearErrText('#Password');
            }

        });



        function clearErrText(id) {
            $(id).removeClass('is-invalid').addClass('is-valid');
            $(id + '~div').removeClass('invalid-feedback').addClass('valid-feedback').text('');
            flag = true;
        }

        $('#account').blur(function () {
            $.ajax({
                type: "Get",
                url: "http://localhost:54129/api/AccountAPI",
                success: function (data) {
                    //console.log(data[0]);
                    var str = $('#account').val();                    
                    var i = 0;
                    while (i < data.length) {
                        var n = str.search(data[i]);
                        if (n != -1) {
                            console.log("帳號重複");
                            $('#prompt').text("帳號重複").css("color","red");
                            break;
                        } else {
                            i++;
                            //document.getElementById("demo").innerHTML = n;
                            console.log(i);
                        }


                    }
                    if (i == data.length) {
                        console.log("驗證成功");
                        $('#prompt').text("此帳號可使用").css("color","green");
                    }
                }

            });
        });

        //$('[data-toggle="popover"]').popover();

    </script>




}