@model JoinFun.Models.Join_Fun_Activities

@{
    var photo = (IEnumerable<JoinFun.Models.Photos_of_Activities>)ViewBag.photo;
    ViewBag.Title = "編輯活動";
}

<h2>揪團活動</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>編輯活動</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.hostId)

        <div class="form-group">
            @Html.LabelFor(model => model.actClassId, "活動類別", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity_Class.actClassName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.actClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actTopic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.actTopic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.actTopic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">活動照片</label>


            <div class="col-md-10">
                @foreach (var item in photo)
                {
                    if (item.actPics != null)
                    {
                        <img src="@Url.Action("GetPhoto", "Activity", new { actId = item.actId})" style="width:200px;height:auto" class="img-thumbnail" />
                    }
                }

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.actTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.actTime, new { htmlAttributes = new { @id = "actTime", @class = "form-control", @readonly = "readonly" } })
                @*@Html.ValidationMessageFor(model => model.actTime, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actDeadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.actDeadline, new { htmlAttributes = new { @id = "actDeadline", @class = "form-control", @readonly = "readonly" } })
                @*@Html.ValidationMessageFor(model => model.actDeadline, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.actDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.actDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ageRestrict, "年齡限制", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age_Restriction.age, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ageRestrict, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, "性別限制", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender_Restriction.gender, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.maxNumPeople, "可參加人數", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.People_Restriction.PeoRestriction, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.maxNumPeople, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.maxBudget, "預算", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Budget_Restriction.Budget, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.maxBudget, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actCounty, "縣/市", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.County.CountyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.actCounty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actDistrict, "鄉/鎮/市/區", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District.DistrictName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.actDistrict, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actRoad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.actRoad, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.actRoad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paymentTerm, "付款方式", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Payment_Restriction", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.paymentTerm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.acceptDrop, "是否可退出", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.acceptDrop)*@
                    @*@Html.EditorFor(model => model.acceptDrop, new { htmlAttributes = new { @class = "form-control", @Value=ViewBag.Drop } })*@
                    <input id="Drop" name="Drop" type="text" class="form-control" value=@ViewBag.Drop readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.acceptDrop, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="儲存" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回活動頁面", "Index")
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@section scripts{

    <script>
        //填入原始會員生日
        var day = ("0" + @Model.actTime.Day).slice(-2);
        //格式化月，如果小於9，前面補0
        var month = ("0" + (@Model.actTime.Month)).slice(-2);
        //拼裝完整日期格式
        var today = @Model.actTime.Year + "-" + (month) + "-" + (day);
        //完成賦值
        $('#actTime').val(today);

        //取得截止時間
        var day1 = ("0" + @Model.actDeadline.Day).slice(-2);
        //格式化月，如果小於9，前面補0
        var month1 = ("0" + (@Model.actDeadline.Month)).slice(-2);
        //拼裝完整日期格式
        var today1 = @Model.actDeadline.Year + "-" + (month1) + "-" + (day1);
        //完成賦值
        $('#actDeadline').val(today1);

        ////////////////
    </script>
}
